<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - HIVE VOX</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="/css/dark-theme.css" rel="stylesheet">
    <style>
        .meeting-controls {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .join-option {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }
        .join-option:hover {
            background: rgba(255, 255, 255, 0.15);
            transform: translateY(-2px);
        }
        .meeting-form {
            display: none;
            margin-top: 15px;
        }
        .meeting-form.active {
            display: block;
        }
    </style>
    

</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">HIVE VOX <span class="version">v0.2</span></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link active" href="/dashboard">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/upload">Upload</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/record">Record</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container mt-4">
        <!-- Google Calendar Integration Section -->
        <div class="meeting-controls mb-4">
            <h3 class="mb-4">Google Calendar Integration</h3>
            <div class="join-option">
                <h5><i class="bi bi-google"></i> Connect Google Calendar</h5>
                <div id="googleAuthStatus" class="mb-3">
                    <p class="text-muted">Status: <span id="authStatus">Not Connected</span></p>
                </div>
                <button class="btn btn-primary" onclick="connectGoogleCalendar()" id="connectGoogleBtn">Connect Google Calendar</button>
                <button class="btn btn-danger" onclick="disconnectGoogleCalendar()" id="disconnectGoogleBtn" style="display: none;">Disconnect</button>
            </div>
        </div>

        <!-- Meeting Controls Section -->
        <div class="meeting-controls">
            <h3 class="mb-4">Meeting Controls</h3>
            
            <!-- Join via Link -->
            <div class="join-option">
                <h5><i class="bi bi-link-45deg"></i> Join via Link</h5>
                <button class="btn btn-primary" onclick="toggleForm('linkForm')">Join Meeting</button>
                <div id="linkForm" class="meeting-form">
                    <div class="mb-3">
                        <label for="meetingLink" class="form-label">Meeting Link</label>
                        <input type="url" class="form-control" id="meetingLink" placeholder="https://meet.google.com/...">
                    </div>
                    <button class="btn btn-success" onclick="joinViaLink()">Join Now</button>
                </div>
            </div>
        </div>

        <!-- Existing Conversations Section -->
        <div class="conversations">
            <h3 class="mb-4">Recent Conversations</h3>
            <div class="row">
                <% conversations.forEach(function(conversation) { %>
                    <div class="col-md-6 mb-4">
                        <div class="card bg-dark text-light">
                            <div class="card-body">
                                <h5 class="card-title"><%= conversation.title %></h5>
                                <p class="card-text"><%= conversation.summary %></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted"><%= conversation.date %></small>
                                    <a href="/conversation/<%= conversation.id %>" class="btn btn-primary btn-sm">View Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
        <button id="logout-button" class="cta-button-secondary">Logout</button>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function toggleForm(formId) {
            const form = document.getElementById(formId);
            form.classList.toggle('active');
        }

        async function joinViaLink() {
            const link = document.getElementById('meetingLink').value;
            if (!link) {
                alert('Please enter a meeting link');
                return;
            }

            try {
                const response = await fetch('/api/meetings/join', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ meetingLink: link })
                });

                if (response.ok) {
                    alert('Joining meeting...');
                } else {
                    const error = await response.json();
                    alert('Error: ' + error.error);
                }
            } catch (error) {
                alert('Error joining meeting: ' + error.message);
            }
        }

        // Check Google Calendar connection status
        async function checkGoogleAuthStatus() {
            try {
                const response = await fetch('/api/auth/google/status');
                const data = await response.json();
                
                const authStatus = document.getElementById('authStatus');
                const connectBtn = document.getElementById('connectGoogleBtn');
                const disconnectBtn = document.getElementById('disconnectGoogleBtn');
                
                if (data.connected) {
                    authStatus.textContent = 'Connected';
                    authStatus.className = 'text-success';
                    connectBtn.style.display = 'none';
                    disconnectBtn.style.display = 'inline-block';
                } else {
                    authStatus.textContent = 'Not Connected';
                    authStatus.className = 'text-danger';
                    connectBtn.style.display = 'inline-block';
                    disconnectBtn.style.display = 'none';
                }
            } catch (error) {
                console.error('Error checking auth status:', error);
            }
        }

        // Connect Google Calendar
        async function connectGoogleCalendar() {
            try {
                const response = await fetch('/api/auth/google/connect');
                const data = await response.json();
                
                if (data.authUrl) {
                    window.location.href = data.authUrl;
                } else {
                    alert('Error: Could not get authentication URL');
                }
            } catch (error) {
                alert('Error connecting to Google Calendar: ' + error.message);
            }
        }

        // Disconnect Google Calendar
        async function disconnectGoogleCalendar() {
            try {
                const response = await fetch('/api/auth/google/disconnect', {
                    method: 'POST'
                });
                
                if (response.ok) {
                    await checkGoogleAuthStatus();
                    alert('Successfully disconnected from Google Calendar');
                } else {
                    const error = await response.json();
                    alert('Error: ' + error.error);
                }
            } catch (error) {
                alert('Error disconnecting from Google Calendar: ' + error.message);
            }
        }

        // Check auth status when page loads
        document.addEventListener('DOMContentLoaded', checkGoogleAuthStatus);

        document.getElementById('logout-button')?.addEventListener('click', async () => {
            try {
                await fetch('/api/auth/logout', {
                method: 'POST',
                credentials: 'include',
                });
                window.location.href = '/login';
            } catch (err) {
                console.error('Logout failed:', err);
                alert('Logout failed');
            }
            });

    </script>
    <script src="/js/auth-check.js"></script>
</body>
</html>  